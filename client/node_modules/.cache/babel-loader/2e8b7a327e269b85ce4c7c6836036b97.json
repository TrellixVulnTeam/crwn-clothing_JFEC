{"ast":null,"code":"var _jsxFileName = \"/Users/guard14/Developer/ZTM/Complete_React_Developer_2021/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionsFetching, selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\nimport withSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport Collection from \"../collection/collection.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionWithSpinner = withSpinner(Collection);\n_c2 = CollectionWithSpinner;\n\nclass Shop extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionsFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionWithSpinner\");","map":{"version":3,"sources":["/Users/guard14/Developer/ZTM/Complete_React_Developer_2021/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","selectIsCollectionsFetching","selectIsCollectionsLoaded","withSpinner","CollectionsOverview","Collection","CollectionsOverviewWithSpinner","CollectionWithSpinner","Shop","Component","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,2BAAT,EAAsCC,yBAAtC,QAAuE,iCAAvE;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACC,mBAAD,CAAlD;KAAME,8B;AACN,MAAMC,qBAAqB,GAAGJ,WAAW,CAACE,UAAD,CAAzC;MAAME,qB;;AAEN,MAAMC,IAAN,SAAmBZ,KAAK,CAACa,SAAzB,CAAmC;AACjCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEV,MAAAA;AAAF,QAAiC,KAAKW,KAA5C;AACAX,IAAAA,0BAA0B;AAC3B;;AAEDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkC,KAAKH,KAA7C;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAFtB;AAGE,QAAA,MAAM,EAAGJ,KAAD,iBACN,QAAC,8BAAD;AACE,UAAA,SAAS,EAAEG,oBADb;AAAA,aAEMH;AAFN;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBADtB;AAEE,QAAA,MAAM,EAAGJ,KAAD,iBACN,QAAC,qBAAD;AACE,UAAA,SAAS,EAAEG,oBADb;AAAA,aAEMH;AAFN;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AAhCgC;;AAmCnC,MAAMK,eAAe,GAAGjB,wBAAwB,CAAC;AAC/Ce,EAAAA,oBAAoB,EAAEb;AADyB,CAAD,CAAhD;;AAIA,MAAMgB,kBAAkB,GAAIC,QAAD,KAAe;AACxClB,EAAAA,0BAA0B,EAAE,MAAMkB,QAAQ,CAAClB,0BAA0B,EAA3B;AADF,CAAf,CAA3B;;AAIA,eAAeF,OAAO,CAACkB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,IAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionsFetching, selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\n\nimport withSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport Collection from \"../collection/collection.component\";\n\nconst CollectionsOverviewWithSpinner = withSpinner(CollectionsOverview);\nconst CollectionWithSpinner = withSpinner(Collection);\n\nclass Shop extends React.Component {\n  componentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const { match, isCollectionFetching } = this.props;\n\n    return (\n      <div className=\"shop\">\n        <Route\n          exact\n          path={`${match.path}`}\n          render={(props) => (\n            <CollectionsOverviewWithSpinner\n              isLoading={isCollectionFetching}\n              {...props}\n            />\n          )}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={(props) => (\n            <CollectionWithSpinner\n              isLoading={isCollectionFetching}\n              {...props}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionsFetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);\n"]},"metadata":{},"sourceType":"module"}