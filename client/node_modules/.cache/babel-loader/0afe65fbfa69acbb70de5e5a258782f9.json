{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport UserActionTypes from \"./user.types\";\nimport { signInSuccess, signInFailure } from \"./user.actions\";\n\nfunction* getSnapshotFromUserAuth(user) {\n  const userRef = yield call(createUserProfileDocument, user);\n  const userSnapshot = yield userRef.get();\n  yield put(signInSuccess({\n    id: userSnapshot.id,\n    ...userSnapshot.data()\n  }));\n}\n\nfunction* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    call(getSnapshotFromUserAuth(user));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    call(getSnapshotFromUserAuth(user));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/guard14/Developer/ZTM/Complete_React_Developer_2021/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","UserActionTypes","signInSuccess","signInFailure","getSnapshotFromUserAuth","user","userRef","userSnapshot","get","id","data","signInWithGoogle","signInWithPopup","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAMA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;;AAEA,UAAUC,uBAAV,CAAkCC,IAAlC,EAAwC;AACtC,QAAMC,OAAO,GAAG,MAAMT,IAAI,CAACG,yBAAD,EAA4BK,IAA5B,CAA1B;AACA,QAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,QAAMb,GAAG,CAACO,aAAa,CAAC;AAAEO,IAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,OAAGF,YAAY,CAACG,IAAb;AAA1B,GAAD,CAAd,CAAT;AACD;;AAED,UAAUC,gBAAV,GAA6B;AAC3B,MAAI;AACF,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMP,IAAI,CAACc,eAAL,CAAqBb,cAArB,CAAvB;AACAF,IAAAA,IAAI,CAACO,uBAAuB,CAACC,IAAD,CAAxB,CAAJ;AACD,GAHD,CAGE,OAAOQ,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACQ,aAAa,CAACU,KAAD,CAAd,CAAT;AACD;AACF;;AAED,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AAC1D,MAAI;AACF,UAAM;AAAEZ,MAAAA;AAAF,QAAW,MAAMP,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACApB,IAAAA,IAAI,CAACO,uBAAuB,CAACC,IAAD,CAAxB,CAAJ;AACD,GAHD,CAGE,OAAOQ,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACQ,aAAa,CAACU,KAAD,CAAd,CAAT;AACD;AACF;;AAED,OAAO,UAAUM,mBAAV,GAAgC;AACrC,QAAMzB,UAAU,CAACO,eAAe,CAACmB,oBAAjB,EAAuCT,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUU,kBAAV,GAA+B;AACpC,QAAM3B,UAAU,CAACO,eAAe,CAACqB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC3B,QAAM3B,GAAG,CAAC,CAACC,IAAI,CAACsB,mBAAD,CAAL,EAA4BtB,IAAI,CAACwB,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n} from \"../../firebase/firebase.utils\";\n\nimport UserActionTypes from \"./user.types\";\n\nimport { signInSuccess, signInFailure } from \"./user.actions\";\n\nfunction* getSnapshotFromUserAuth(user) {\n  const userRef = yield call(createUserProfileDocument, user);\n  const userSnapshot = yield userRef.get();\n  yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n}\n\nfunction* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    call(getSnapshotFromUserAuth(user));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    call(getSnapshotFromUserAuth(user));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}